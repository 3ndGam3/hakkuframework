#!/usr/bin/env python3

# 			 --------------------------------------------------
#							µSploit Framework
# 			 --------------------------------------------------
#		 Copyright (C) 2015 Noa-Emil Nissinen (4shadoww)

# 		 Permission is hereby granted, free of charge, to any person obtaining
#		 a copy of this software and associated documentation files (the
#		 "Software"), to deal in the Software without restriction, including
#		 without limitation the rights to use, copy, modify, merge, publish,
#		 distribute, sublicense, and/or sell copies of the Software, and to
#		 permit persons to whom the Software is furnished to do so, subject to
#		 the following conditions:

#		 The above copyright notice and this permission notice shall be included
#		 in all copies or substantial portions of the Software.

#		 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#		 EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#		 MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#		 IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
#		 CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
#		 TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
#		 SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

try:

	# Import python modules
	import readline
	import traceback
	import sys
	import logging
	import getopt
	import csv
	import os

	# Check python version
	req_version = (3,5)
	cur_version = sys.version_info
	if cur_version < req_version:
		print('python3.5 or greater is recommended')

	# Append libs path
	sys.path.append('core/libs')

	# Disable scapy warning
	logging.getLogger("scapy.runtime").setLevel(logging.ERROR)

	# Import core modules
	from core import colors
	from core import header
	from core import usftest
	from core import scriptio

	print("loading modules...")

	# Import modules
	from core import shell

	print("done!")

	# Print header
	print(colors.cyan+header.sploit+colors.end)
	header.print_info()

except KeyboardInterrupt:
	sys.exit(0)

if not os.geteuid() == 0:
	print(colors.red+'some modules will not work without root permission!\nrecommended to login as root!'+colors.end)

# Exception handling

def fatalerror():
	print(colors.red+"FATAL ERROR:")
	traceback.print_exc()
	print(colors.end)
	forcetokr = input('Do you want to force to keep µSploit Framework running? ')
	if forcetokr == 'yes':
		main()
	elif forcetokr == 'y':
		main()

# Start up shell

try:
	def main(scripting, scf):
		try:
			if scripting == 1:
				scriptio.run(scf)
				
			else:
				shell.run()

		except SystemExit:
			sys.exit(0)

		except:
			fatalerror()

	if __name__ == '__main__':
		scripting = 0
		scf = ""

		try:
			opts, args = getopt.getopt(sys.argv[1:], 's:t:')
			for opt, arg in opts:
				if opt in ('-t'):
					if arg == 'challenge':
						usftest.challenge()
					else:
						print(colors.red+'invalid arguments'+colors.end)

				if opt in ('-s'):
					try:
						scriptfile = open('core/scripts/'+arg+'.usf', 'r')
						reader = csv.reader(scriptfile)
						scf = [row for row in reader]
						scripting = 1
						print(colors.green+"entering scripting mode..."+colors.end)
					except FileNotFoundError:
						print(colors.red+'script not found'+colors.end)
		except getopt.GetoptError:
			print(colors.red+'invalid arguments'+colors.end)
		main(scripting, scf)

# Exceptions

except KeyboardInterrupt:
	print()
	sys.exit(0)

except SystemExit:
	print(colors.green+"Thank you for using µSploit Framework!"+colors.end)

except:
	fatalerror()